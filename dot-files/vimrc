" GENERAL OPTIONS
" ---------------
syntax on
set noerrorbells		        " Don't make any noises.
set tabstop=4 softtabstop=4	" Use 4 spaces for tabs,
set shiftwidth=4		        " Again, shift stuff but 4 spaces when using tab.
set expandtab			          " Convert a tab to spaces.
set smartindent			        " Try to indent for you, as much as Vim can.
set number relativenumber   " Enable sidebar numbers.
set smartcase			          " Do case sensitive searching until I put in a letter.
set noswapfile			        " Don't create vim.swp files all over the place.
set nobackup			          " Don't need backup, because we'll make our own.
set undodir=~/.vim/undodir	" Tell Vim where to save the undo directory.
set undofile			          " Create an undofile for every file we open/create.
set incsearch			          " While you search you get results.
set cursorline              " Highlights current line.
set background=dark         " Use $this terminal's $background theme.
" ---------------


" PLUG PLUGINS 
" -------------------------------------------
"  Try to install Plug, if it isn't already.
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Install these plugins.
call plug#begin('~/.vim/plugged')

    " Preview .md files in browser
    Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install' }

    " Code completion
    Plug 'neoclide/coc.nvim', {'branch': 'release'}

    " Fancy status line
     Plug 'itchyny/lightline.vim'

    " Nice file manager
    Plug 'preservim/nerdtree'

    " Distraction free Markdown editing
    Plug 'junegunn/goyo.vim'

call plug#end()
" -------------------------------------------


" Lightline configuration
" -----------------------
set noshowmode
set laststatus=2
" -----------------------


" Nerdtree configuration
" ----------------------
" Toggle Nerdtree sidebar.
nnoremap <C-t> :NERDTreeToggle<CR>

" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
" ----------------------



" KEY MAPS & KEY HACKS 
" -----------------------------------------------
" Sets the leader (command key) to spacebar.
let mapleader = " "

" Keep the cursor in the center of the screen.
nnoremap j jzz
nnoremap k kzz

" Format/indent the entire file, from the top.
nnoremap <leader>f gg=G<CR>

" Toggle word-wrap.
nnoremap <leader>ww :set wrap!<CR>

" If you accidentally use W or Q, it doesn't matter.
:command WQ wq
:command Wq wq
:command W w
:command Q q

" Switch theme between light and dark using <LEADER>bg
map <Leader>bg :let &background = ( &background == "dark"? "light" : "dark" )<CR>

" Enable and disable CoC.
function ToggleCoc()
    if g:coc_enabled
        CocDisable
    else
        CocEnable
    endif
endfunction
map <leader>cc :call ToggleCoc()<CR>

" Fix markdown issues.
function FixMarkdown()
    if g:coc_enabled
        CocCommand markdownlint.fixAll
    endif
endfunction
map <leader>mf :call FixMarkdown()<CR>

" Enable focus writing mode.
function Focus()
    Goyo
    set linebreak
    hi CursorLine cterm=none
    CocDisable
endfunction
map <leader>f :call Focus()<CR>

" -----------------------------------------------

